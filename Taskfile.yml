---
version: '3'

dotenv:
  - '.env'

env:
  IMAGE: localhost/smoke-test-experiments
  TAG: latest

vars:
  _GLOBAL_CONTAINER_OPTS: -it --rm
  _PODMAN_OPTS: --userns=keep-id --security-opt label=disable

tasks:
  test:
    desc: Run tests using the robot command
    summary: |
      This task runs the robot command to execute the tests.

      The task mounts the current directory to the container and runs the tests
      using the robot command. The task also mounts the minder binary, and the
      offline token file to the container if they are available in the current directory.
      The minder configuration file is only mounted if it is provided in the environment.

      Available variables:
      
      - MINDER_BINARY_PATH: The path to the minder binary. If not provided, the
        task will try to find the minder binary in the system.
      - MINDER_CONFIG: The path to the minder configuration file. If not provided,
        the task will use the default configuration file in the current directory
        (./config.yaml).
      - MINDER_OFFLINE_TOKEN_PATH: The path to the offline token file. If not provided,
        the task will use the default offline token file in the current directory
        (./offline.token).
      - MINDER_RULETYPES_PATH: The path to the ruletypes file. If not provided, the
        tests will clone the ruletypes repository from GitHub.
      - CLI_ARGS: Additional arguments to pass to the robot command.
    cmds:
      - task: test-podman-or-docker
        vars:
          _CONTAINER_CMD:
            sh: "which podman || which docker"

  test-podman-or-docker:
    internal: true
    deps:
      - build
    cmds:
      - |
        {{._CONTAINER_CMD}} run {{._CONTAINER_OPTS}} \
          --network=host \
          -v ./:$CTESTDIR \
          -v {{._MINDER_BINARY_PATH}}:/usr/bin/minder \
          {{if .MINDER_CONFIG}} -v {{.MINDER_CONFIG}}:/etc/minder/config.yaml {{end}} \
          {{if .MINDER_RULETYPES_PATH}} -v {{.MINDER_RULETYPES_PATH}}:/opt/minder-ruletypes {{end}} \
          -v {{.MINDER_OFFLINE_TOKEN_PATH | default "./offline.token" }}:/opt/minder-offline.token \
          --mount type=tmpfs,destination=/.config \
          -e MINDER_OFFLINE_TOKEN_PATH=/opt/minder-offline.token \
          -e MINDER_CONFIG=/etc/minder/config.yaml \
          $IMAGE:$TAG \
          --outputdir $CTESTDIR/results \
          --pythonpath $CTESTDIR \
          --xunit $CTESTDIR/results/xoutput.xml \
          {{if .CLI_ARGS}} {{.CLI_ARGS}}{{end}} $CTESTDIR/minder-tests
    requires:
      vars:
        - _CONTAINER_CMD
    env:
      CTESTDIR: /robottests
    vars:
      _MINDER_BINARY_PATH:
        sh: '{{if .MINDER_BINARY_PATH}} echo {{.MINDER_BINARY_PATH}} {{else}} which minder {{end}}'
      _CONTAINER_OPTS: '{{._GLOBAL_CONTAINER_OPTS}} {{if ._CONTAINER_CMD | contains "podman"}} {{._PODMAN_OPTS}} {{end}}'
    preconditions:
      - sh: test -f {{._MINDER_BINARY_PATH}}
        msg: "The minder binary is missing. Please provide the path to the minder binary and try again."
      - sh: test -f {{.MINDER_OFFLINE_TOKEN_PATH | default "./offline.token" }}
        msg: "The offline token file is missing. Please create the offline token file and try again."
      - sh: "{{if .MINDER_CONFIG}}test -f {{.MINDER_CONFIG}}{{else}} true {{end}}"
        msg: "The minder configuration file is missing. Please create the configuration file and try again."

  build:
    desc: Build the smoke test image
    cmds:
      - task: build-docker-or-podman
        vars:
          _CONTAINER_CMD:
            sh: "which podman || which docker"

  build-docker-or-podman:
    internal: true
    cmds:
      - "{{._CONTAINER_CMD}} build -t $IMAGE:$TAG ."
    sources:
      - Dockerfile
      - requirements.txt
    status:
      - "podman image exists $IMAGE:$TAG"

  lint:
    desc: Run all linters
    deps:
      - lint-flake8
      - lint-bandit
      # TODO: Add robot framework linter

  lint-flake8:
    desc: Run the flake8 linter
    deps:
      - venv
    cmds:
      - cmd: |
          source .venv/bin/activate
          echo "Running flake8..."
          flake8 resources/
        silent: true

  lint-bandit:
    desc: Run the bandit linter
    deps:
      - venv
    cmds:
      - cmd: |
          source .venv/bin/activate
          echo "Running bandit..."
          bandit -q -r resources/
        silent: true

  venv:
    desc: Create a virtual environment for python3
    cmds:
      - cmd: |
          echo "* Creating a virtual environment..."
          python3 -m venv .venv
        silent: true
      - cmd: |
          echo "* Activating the virtual environment..."
          source .venv/bin/activate

          echo "* Installing dependencies..."
          pip3 install --upgrade pip

          echo "* Installing requirements..."
          pip3 install -r requirements.txt

          echo "* Installing dev requirements..."
          pip3 install -r requirements-dev.txt
        silent: true
      - cmd: echo -e "\n\nVirtual environment created successfully."
        silent: true
      - cmd: 'echo "To activate the virtual environment, run: source .venv/bin/activate"'
        silent: true
    sources:
      - .venv
      - requirements.txt
      - requirements-dev.txt
    preconditions:
      - sh: "python3 --version"
        msg: "python3 is required to create the virtual environment. Please install Python 3 and try again."
